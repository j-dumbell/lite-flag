openapi: 3.0.3
info:
  title: Liteflag API
  version: 1.0.0
  description: API for managing feature flags.

servers:
  - url: https://api.example.com/v1
    description: Production server

paths:
  /healthz:
    get:
      summary: API healthcheck
      tags:
        - healthz
      responses:
        '200':
          description: API healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: API unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /flags:
    post:
      summary: Create a new feature flag
      tags:
        - flags
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flag'
      responses:
        '201':
          description: Flag created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flag'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
        '409':
          description: Flag with the given key already exists

    get:
      summary: Retrieve all feature flags
      tags:
        - flags
      responses:
        '200':
          description: A list of feature flags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flag'

  /flags/{key}:
    parameters:
      - in: path
        name: key
        required: true
        schema:
          type: string
        description: Unique key of the feature flag

    get:
      summary: Retrieve a single feature flag by key
      tags:
        - flags
      responses:
        '200':
          description: The feature flag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flag'
        '403':
          description: Forbidden
        '404':
          description: Flag not found

    put:
      summary: Update an existing feature flag
      tags:
        - flags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagInput'
      responses:
        '200':
          description: Flag updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flag'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Flag not found

    delete:
      summary: Delete a feature flag
      tags:
        - flags
      responses:
        '204':
          description: Flag deleted successfully
        '404':
          description: Flag not found

  /api-keys:
    post:
      summary: Create a new API key
      tags:
        - API keys
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyInput'
      responses:
        '201':
          description: API key created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
        '409':
          description: API key with the given name already exists

  /api-keys/{name}/rotate:
    parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
        description: Name of the API key
    post:
      summary: Rotate an API key
      tags:
        - API keys
      security:
        - ApiKeyAuth: []
      responses:
        '201':
          description: Rotated API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
        '404':
          description: API key not found

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        database:
          type: boolean
          description: Whether the database is healthy
      required:
        - database

    Flag:
      type: object
      properties:
        key:
          type: string
          description: Unique identifier for the feature flag
        type:
          type: string
          enum: [boolean, string]
          description: Type of the flag value
        isPublic:
          type: boolean
          description: Whether or not the flag is public.
        value:
          oneOf:
            - type: boolean
            - type: string
          description: Value of the flag, must match the type
      required:
        - key
        - type
        - isPublic
        - value

    ApiKey:
      type: object
      properties:
        name:
          type: string
          description: Unique identifier for the API key
        role:
          type: string
          enum: [root, admin, readonly]
          description: The associated permissions of the key
        key:
          type: string
          description: The API Key
      required:
        - name
        - role
        - key

    ApiKeyInput:
      type: object
      properties:
        name:
          type: string
          description: Unique identifier for the API key
        role:
          type: string
          enum: [root, admin, readonly]
          description: The associated permissions of the key
      required:
        - name
        - role

    FlagInput:
      type: object
      properties:
        isPublic:
          type: boolean
          description: Whether the feature flag is public or not
        type:
          type: string
          enum: [boolean, string]
          description: Type of the flag value
        value:
          oneOf:
            - type: boolean
            - type: string
          description: Value of the flag, must match the type
      required:
        - isPublic
        - type
        - value

  responses:
    NotFound:
      description: Entity not found.
    BadRequest:
      description: Bad request.
    Conflict:
      description: Conflict with existing data.

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

security:
  - ApiKeyAuth: []
